plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def keystorePropertiesFile = rootProject.file('keystore.properties')
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace = "com.phongsavanh.pb_hrsystem"

    ndkVersion = "26.1.10909125"
    compileSdkVersion 35
    
    buildFeatures {
        buildConfig true
    }
    
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        applicationId = "com.phongsavanh.pb_hrsystem"
        minSdk = 24
        targetSdk = 35
        versionCode = 5
        versionName = "1.1.8"
        multiDexEnabled true
        resConfigs "en", "ms"
        manifestPlaceholders = [
            largeHeap: "true"
        ]
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            crunchPngs true
            buildConfigField "boolean", "IS_LOW_END_TARGET", "true"
        }
        
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            buildConfigField "boolean", "IS_LOW_END_TARGET", "true"
        }
        
        veryLowEnd {
            initWith debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules-low-end.pro'
            buildConfigField "boolean", "IS_VERY_LOW_END", "true"
            buildConfigField "boolean", "ENABLE_ANIMATIONS", "false"
            buildConfigField "boolean", "ENABLE_SHADOWS", "false"
            buildConfigField "boolean", "ENABLE_BLUR", "false"
            matchingFallbacks = ['debug']
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libjsc.so'
    }

    // Temporarily disable splits to prevent APK corruption during optimization
    // splits {
    //     abi {
    //         enable true
    //         reset()
    //         include 'arm64-v8a', 'armeabi-v7a', 'x86_64'
    //         universalApk true
    //     }
    //     
    //     density {
    //         enable true
    //         reset()
    //         include 'mdpi', 'hdpi', 'xhdpi', 'xxhdpi'
    //     }
    // }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
        abortOnError false
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

flutter {
    source '../..'
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    implementation 'androidx.activity:activity:1.8.0'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.play:integrity:1.4.0'
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    implementation 'androidx.startup:startup-runtime:1.1.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
}

apply plugin: 'com.google.gms.google-services'

android.applicationVariants.all { variant ->
    variant.outputs.all { output ->
        def buildType = variant.buildType.name
        def versionName = variant.versionName
        outputFileName = "pb_hrsystem_${buildType}_${versionName}.apk"
    }
}
